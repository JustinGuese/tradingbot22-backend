apiVersion: apps/v1
kind: Deployment
metadata:


  labels:
    io.kompose.service: tradingbot-baseimage
  name: tradingbot-baseimage
  namespace: tradingbot22
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: tradingbot-baseimage
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: tradingbot-baseimage
    spec:
      containers:
        - env:
            - name: ALERT_ON_BUY
              value: "composer-buydipsqqq-shorting-adapted,eiten_longonly_daily_weeklyRebalance_testtype-sim,composer-bigtechmomentum-v1"
            - name: SLACKURL
              valueFrom:
                secretKeyRef:
                  key: slackurl
                  name: slackurl
                  # kubectl create secret generic slackurl --from-literal=slackurl=https://hooks.slack.com/services/... -n tradingbot22
            - name: PSQL_URL
              value: postgres:postgres@postgres-service.dbstaging.svc.cluster.local:5432/postgres # i mean it's a prototype so come on
            - name: ALPACA_API_KEY
              valueFrom:
                secretKeyRef:
                  key: apikey
                  name: alpaca-api-secret
            - name: ALPACA_SECRET
              valueFrom:
                secretKeyRef:
                  key: apisecret
                  name: alpaca-api-secret
            - name: ELASTICSEARCH_URL
              value: http://elasticsearch.kube-logging.svc.cluster.local:9200
          image: guestros/tradingbot22-backend:latest
          name: tradingbot-backend
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 50Mi
          ports:
            - containerPort: 8000
          livenessProbe:
            exec:
              command:
              - curl --fail http://localhost:8000/healthz || exit 1
            initialDelaySeconds: 5
            periodSeconds: 300
      restartPolicy: Always
status: {}
